<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>라곰(Lagom)</title>
    <description>백수개발자의 지식 저장소.
</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 22 Jan 2023 23:36:27 +0900</pubDate>
    <lastBuildDate>Sun, 22 Jan 2023 23:36:27 +0900</lastBuildDate>
    <generator>Jekyll v3.8.6</generator>
    
      <item>
        <title>[GithubPages] 01.하루만에 깃허브 블로그 만들기</title>
        <description>&lt;h1 id=&quot;개요&quot;&gt;개요&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;목차
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#개요&quot;&gt;1.개요&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#2.예비개발자에게-블로그와-포트폴리오가-필요한-이유&quot;&gt;2.예비개발자에게 블로그와 포트폴리오가 필요한 이유&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#3.블로그-종류&quot;&gt;3.블로그 종류&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#4.Github-Pages-장점&quot;&gt;4.Github Pages 장점&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1-개요&quot;&gt;1. 개요&lt;/h2&gt;
&lt;p&gt;17년도 군대에서 4차산업혁명에 관한 책을 읽은 이후 프로그래밍이라는 것을 처음알았고 프로그래밍만 할줄 안다면 나의 아이디어를 실현시킬수 있다는 것이 매력적으로 느껴저서 과감하게 전과를 택하였다. 복학하자마자 아는 사람 아무도 없이 수업을 듣고 족보없이 시험을 쳐가면서 굉장히 외로움도 느꼈고 어떻게 해야하는지 몰랐었다. 지금 4학년 졸업을 앞두니 많은 것이 보이고 많은 것을 놓쳤다는 것을 깨닫는다. 외부 개발자 모임이나 프로그램들을 놓친것들이 너무 아쉽다. 물론 인적네트워크를 쌓고 싶은 욕구와 저런것들을 몰랐기에 나 스스로 동아리를 만들어 좋은 커커리어 쌓은 것은 좋은거 같다. 2학년 2학기때 교수님이 개발자라면 블로그를 하는게 좋다고 하셔서 네이버블로그를 시작하였었다. 꾸준히 하여 매주 천명정도의 조회수가 나오지만 역시 네이버블로그의 한계가 느껴지고 구글링을 하면 항상 먼저 보이는 티스토리 블로그와 github.io 블로그들이 눈에 보였다. 만들어야지 만들어야지 하다. 졸업이 2달밖에 안남았다.&lt;/p&gt;

&lt;p&gt;깃헙으로 블로그도 만들고 포트폴리오도 만들어야하는데 하는데 하다가, 드디어 원하는 대학원에 합격하여 시간이 생겨 나의 블로그와 포트폴리오를 만들어 볼려고한다.&lt;/p&gt;

&lt;p&gt;프로그래밍 관련 취업을 하고 있다면 Gitgub으로 쉽게 이력을 공유,제출할수 있을것이다.&lt;/p&gt;

&lt;p&gt;블로그를 통해 ‘Github 블로그 만들기’ 섹션과 ‘Github를 이용한 개발자 포트폴리오 만들기’ 섹션을 우선 포스팅할 생각이다. 어렵겠지만 도전하면서 동시에 포스팅도 할생각이다.&lt;/p&gt;

&lt;h2 id=&quot;2-예비개발자에게-블로그와-포트폴리오가-필요한-이유&quot;&gt;2. 예비개발자에게 블로그와 포트폴리오가 필요한 이유&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&quot;../../../../assets/img/study/githubpages/1.png&quot; alt=&quot;그림1&quot; width=&quot;400&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;내가-생각하는-블로그를-하는-이유&quot;&gt;내가 생각하는 블로그를 하는 이유&lt;/h3&gt;
&lt;p&gt;첫번째 이유&lt;/p&gt;

&lt;p&gt;프로그래밍 관련 학과의 학생이라면 또는 개발자가 되기 위해 준비하는 사람이라면&lt;/p&gt;

&lt;p&gt;위 사진을 한번쯤 보았을 것이다.&lt;/p&gt;

&lt;p&gt;프로그래머스의 이력서를 작성하는 페이지이다.&lt;/p&gt;

&lt;p&gt;​
프로그래머스를 통해 채용을 하는 모든 기업들은 이 이력서를 통해 지원자들의 블로그에 접속하여 지원자들이 지금까지 무엇을 해왔는지 볼수 있다. 프로그래머스와 중소 기업, 스타트업 뿐만이 아니다.&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;아직 실력이 부족하다고 생각하는 졸업예정자들을 위한 각종 개발자 양성소, 교육기관들인 SSAFY, 소마, 네이버 커넥트 부스트 캠프, 우하한테크코스, 멋쟁이사자처럼, 광주 인공지능 사관학교등 대부분이&lt;/p&gt;

&lt;p&gt;지원자의 블로그와 깃허브 주소를 제출하는 칸이 있다.&lt;/p&gt;

&lt;p&gt;​
이처럼 깃허브는 개발자에게 땔수 없는 필수 코스이며, 블로그 또한 선택사항이 아니다.&lt;/p&gt;

&lt;p&gt;그것이 첫번째 이유이다.&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;두번째 이유는 나를 위함이다.&lt;/p&gt;

&lt;p&gt;사람의 뇌는 CPU가 아니다. 배운내용은 계속해서 까먹는다.&lt;/p&gt;

&lt;p&gt;필요할때, 까먹은 내용을 구글링을 하여 다시 잘 정리된 블로그를 찾거나 지금 내 상황에 딱 맞는 블로그를 찾는 것이 번거로우며 시간이 걸린다.&lt;/p&gt;

&lt;p&gt;그렇다면 내가 블로그를 만드는 것이 낫지않을까?&lt;/p&gt;

&lt;p&gt;내가 정리한 내용이므로 나에게 최적화 된 내용일 것이다. 또한 배운 내용, 프로젝트를 하면서 알게된 내용을 정리하면 스스로 복습이되어 공부가 된다. 또한 내가 배운 내용을 다른 사람들이 보고 도움이 된다면 이 또한 얼마나 뿌듯한가.&lt;/p&gt;

&lt;p&gt;이런 블로그 조회수는 성취감을 느끼게 해준다. 또 조회수가 높으면 광고를 받아 돈을 벌수도 있다.&lt;/p&gt;

&lt;h3 id=&quot;기타-다른-사람들이-블로그를-하는-이유&quot;&gt;기타 다른 사람들이 블로그를 하는 이유&lt;/h3&gt;
&lt;p&gt;​&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;공유 정신으로 스스로 사회에 기여하는 사람이 되고 싶어서&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;적극적인 사람 또는 열정을 가진 사람으로 보이기 위해&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;사업가 마인드를 가진 사람으로 보인다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;구글 애드센스를 장착하여 광고 수익을 내기 위해서&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;사업상 마케팅 수단이 필요하여&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;1인 기업, 파워블로그 등의 활동으로 수익 창출을 위하여(유튜버와 유사)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;취미가 글쓰기이거나 쓰는 동안 생각이 정리되며 스트레스가 풀려서&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;많은 이들과 육아, 가정 등 지식, 노하우를 공유하고 싶어서&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;배운 지식을 정리하며 메타적 사고를 넓히고자&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;취업, 경력관리, 이직에 도움이 되어서&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;PC에 쌓여가는 지식을 정리하고, 온라인에 연결하여 접근성을 확보하기 위해서&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SNS 할성화 및 온오프라인 모임을 위하여&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;남들이 하기 때문&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;다른 사람의 정보를 모아놓기 위해서, 즐겨찾기 용도로&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;그 외 여러 목적이 있지만 어떤 이유든 글을 쓰기 위한 충분한 동기가 되지 않을까?&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;3-블로그-종류&quot;&gt;3. 블로그 종류&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;그렇다면 블로그는 어느것을 하면 좋을까?&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;필자는 처음 네이버 블로그를 이용하였다. 2년동안 꾸준히 하니 월 4천명이 넘는 조회수를 가지게 되었다.&lt;/p&gt;

&lt;p&gt;하지만 프로그램을 하다보면 무조건 구글링을 하게 되어있고 구글링을 하면 관련 내용으로 가장 먼저 보이는 블로그는 티스토리, github.io, velog.io 일것이다.&lt;/p&gt;

&lt;p&gt;네이버는 구글등 해외 검색엔진 노출이 잘되지 않는다. 코드를 올리는 것이 보기 좋게 올릴수 없다. 포스팅 자유도가 낮다.&lt;/p&gt;

&lt;p&gt;티스토리는 전통적으로 많은 개발자들이 사용하는 플랫폼이다. 깔끔한 디자인, 커스터마이징 자유도, 카운팅 등 다양한 기능이 있다.&lt;/p&gt;

&lt;p&gt;velog는 처음부터 컨셉 자체가 개발자를 위한 블로그 플랫폼이다. 마크다운, 코드, 하이라이팅등 쉽게 잘 포스팅할수 있고 깔끔한 디자인 768px의 포스팅 공간, 뚜렷한 폰트&lt;/p&gt;

&lt;p&gt;github page를 통해 블로그를 만들시간이 없다면 velog를 통해 만드는 것을 추천한다.&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;플랫폼 별 장점과 단점
| 서비스(플랫폼) | 장점 | 단점 |
| —- | —- | —- |
| 네이버 Naver | -국내 클릭율(CTR) 우수 -상품 리뷰에 효과적 | -구글 등 해외 검색엔진 노출 문제 -커스터마이징 불가 (Markdown 사용불가 등) |
| 티스토리 Tistory | -커스터마이징 자유도 -깔끔한 디자인 -카운팅 등 다양한 기능 | -에디터 Wysiwyg 불편 -신규 제작 시 초대장이 필요 -기능의 파편화 |
| 벨로그 Velog | -한국사람이 개발 -국내 개발자들을 위한 플랫폼 -깔끔한 디자인 -브런치와 비슷 | -커스터마이징 불가 |
| 브런치 Brunch | -유사글 연결 기능 -깔끔한 디자인 -포스팅에만 집중하기 좋음 - 모바일 탁월 | -구글 등 해외 검색엔진 노출 문제 -커스터마이징 불가 -코드 삽입과 gist 지원 불가 |
| 구글 블로그 Blogger | - 검색노출 최고 | -검색 노출 외 좋은 점이 없다.
|워드프레스 Wordpress | -이지위그(Wysiwyg) 탁월 -APM 웹 프로그래밍 운영가능 | -유료 호스팅 운영 필요(AWS, CAFE24 등) -유지보수 상당한 노력 필요 |
| 지킬, Github 블로그 | -디자인,기능 거의 무제한 -비용 무료/속도 빠름 -개인DB화 관리 | -양방향 서비스 불가 -기능 연동 시 기술적 노하우 필요 |&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;4-github-pages-장점&quot;&gt;4. Github Pages 장점&lt;/h2&gt;

&lt;p&gt;확실히 Github page는 불편하다. posting, publish보다 만들고 꾸미는데 골치 아픈거 같다.근데 왜 할까? 그 이유는 몰라도 해야할거 같지 않은가?&lt;/p&gt;

&lt;p&gt;일단 열심히 그 장점을 찾아보았다.&lt;/p&gt;

&lt;p&gt;먼저 Github Page는 github.io 형태의 URL로 서비스가 제공된는 Jekyll 기반의 Github Pages 블로그이다.&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;그 장점과 선택 이유는 다음과 같다.&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;공짜다. 그런데 빠르다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;HTML/Markdown 기반 포스트 작성&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;CSS/JS 추가 기능&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;글 작성이 쉽다. 글쓰기에 집중하기 쉽다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;나만의 데이터베이스를 보유한 효과가 있다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;기능 확장을 위한 Front-End 생태계(Eco)가 풍부하고 수준이 뛰어나다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Git, Ruby등의 기술을 습관처럼 익히게 된다. 협업도 가능하다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;디자인, 기능 등 어떤 홈페이지 보다도 다양한 기능을 구현할수 있다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;프로젝트 개발 시 Git을 통한 연동으로 기술 블로그로서 최적의 기능을 제공한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;서비스(플랫폼,호스팅 등)가 종료되어도 쉽게 보관, 이동이 가능하다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;광고를 쉽게 달 수 있다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Jekyll외 Ghost, Hexo 같은 정적 사이트 생성기와 연동 가능하다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;README.md 의 한계( 수학 기호 지원 없음, CSS로 꾸밀 수 없음)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;-마크다운의-장점&quot;&gt;+ 마크다운의 장점&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;HTML의 문제점
태그 때문에 복잡해서 읽기 어렵다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;../../../../assets/img/study/githubpages/2.png&quot; alt=&quot;그림2&quot; width=&quot;400&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../../assets/img/study/githubpages/3.png&quot; alt=&quot;그림3&quot; width=&quot;400&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Markdown
글/그림이 대부분인 정적인 콘텐츠에 최적화되어있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;직관적이다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../../assets/img/study/githubpages/2.png&quot; alt=&quot;그림4&quot; width=&quot;400&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../../assets/img/study/githubpages/4.png&quot; alt=&quot;그림5&quot; width=&quot;400&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 26 Dec 2020 11:45:51 +0900</pubDate>
        <link>http://localhost:4000/study/2020/12/26/making-blog01.html</link>
        <guid isPermaLink="true">http://localhost:4000/study/2020/12/26/making-blog01.html</guid>
        
        <category>githubpage</category>
        
        
        <category>study</category>
        
      </item>
    
      <item>
        <title>[GithubPages] 03.하루만에 깃허브 블로그 만들기</title>
        <description>&lt;h1 id=&quot;커스텀하기&quot;&gt;커스텀하기&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;목차
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#1._data&quot;&gt;1._data&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#2._featured_tags&quot;&gt;2._featured_tags&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#3._includes&quot;&gt;3._includes&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#4._posts&quot;&gt;4._posts&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#5.assets&quot;&gt;5.assets&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#6._config.yml&quot;&gt;6._config.yml&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#7.about.md&quot;&gt;7.about.md&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이제 자신의 블로그로 만들기위해서 커스텀을 해보자.&lt;/p&gt;

&lt;p&gt;대부분 지킬 깃허브 블로그가 비슷한 구조로 되어있기때문에 다른 테마에도 적용할수 있을것이다.&lt;/p&gt;

&lt;p&gt;물론 완전 똑같지는 않을수 있으니 그 테마를 잘 분석하고 그 테마에 맞게 커스텀하면 되겠다.&lt;/p&gt;

&lt;p&gt;하루만에 깃허브 블로그 만들기 시리즈는 하루만에 빨리 자신의 블로그를 만드는것이기 때문에 원리 같은것은 설명하지 않으며 커스텀 순서도 그냥 가장 위에있는 폴더와 파일 순으로 하겠다.&lt;/p&gt;

&lt;h2 id=&quot;1-_data&quot;&gt;1. _data&lt;/h2&gt;

&lt;p&gt;위에서 부터 하나하나 바꿔보자&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../../assets/img/study/githubpages/3-1.jpeg&quot; alt=&quot;그림1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;_data 폴더에서는 authors.yml만 바꾸면 된다. 블로그의 주인, 저자를 정하는 과정이다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../../assets/img/study/githubpages/3-2.jpeg&quot; alt=&quot;그림2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;author1 –&amp;gt; 자기 영어 닉네임, 깃헙 아이디&lt;/p&gt;

&lt;p&gt;name : 자기 이름&lt;/p&gt;

&lt;p&gt;email : 자기 이메일&lt;/p&gt;

&lt;p&gt;about : About 보여줄 자기 또는 블로그 설명 글&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;picture:&lt;/p&gt;

&lt;p&gt;picture은 About에 보일 자기 얼굴이다.&lt;/p&gt;

&lt;p&gt;1x는 웹에서 보일사진&lt;/p&gt;

&lt;p&gt;2x는 모바일용이다.&lt;/p&gt;

&lt;p&gt;이때 picture의 path의 위치를 /assets/img/me.jpg로 바꿔준다.
마찬가지로 1x와 2x도 바꿔주자. me2.jpg로 다른 사진을 이용해도 된다.&lt;/p&gt;

&lt;p&gt;이후 assets/img폴더에 me.jpg 사진을 넣는다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../../assets/img/study/githubpages/3-3.jpeg&quot; alt=&quot;그림3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;assets/img에 자신을 대표할 사진을 me.jpg로 저장한다.&lt;/p&gt;

&lt;p&gt;path: assets/img/me.jpg로 바꾼다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../../assets/img/study/githubpages/3-4.jpeg&quot; alt=&quot;그림4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;social 에서는 사이드바 아래쪽에 자신에게 컨텍할수 있는 메일, 깃헙, 페이스북, 트위터등이있다.&lt;/p&gt;

&lt;p&gt;필자는 깃헙, 메일, 인스타그램만 열어놓았다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../../assets/img/study/githubpages/3-5.jpeg&quot; alt=&quot;그림5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;다음으로 두번째 저자이다. 회사, 동아리가 공동 관리하는 블로그라면 위 양식을 계속해서 추가하면 된다.&lt;/p&gt;

&lt;p&gt;필자는 개인 블로그이므로 그냥 그대로 두었다.&lt;/p&gt;

&lt;h2 id=&quot;2-_featured_tags&quot;&gt;2. _featured_tags&lt;/h2&gt;

&lt;p&gt;사이드바 카테고리이다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../../assets/img/study/githubpages/3-6.jpeg&quot; alt=&quot;그림6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;필자는 카테고리 가장 위에 About 다음으로 Portfolio, Project, Class, Review, Daily, Travel, Etc 로 구성하고 싶다.&lt;/p&gt;

&lt;p&gt;hyde.md 파일을 Portfolio.md로 이름을 바꾼다.&lt;/p&gt;

&lt;p&gt;title을 Portfolio&lt;/p&gt;

&lt;p&gt;slug는 portfolio&lt;/p&gt;

&lt;p&gt;order는 순서로 2로 바꾼다.&lt;/p&gt;

&lt;p&gt;description은 이 카테고리의 설명글을 넣는다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../../assets/img/study/githubpages/3-7.jpeg&quot; alt=&quot;그림7&quot; /&gt;&lt;/p&gt;

&lt;p&gt;같은 양식으로 7개를 만들었다.&lt;/p&gt;

&lt;h2 id=&quot;3-_includes&quot;&gt;3. _includes&lt;/h2&gt;

&lt;p&gt;templates폴더에 footer.html에서 Powered by를 찾는다. Hydejack을 자신의 블로그 주소와 자기 이름으로 바꿔준다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;about.html&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;author.html&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;footer.html&lt;/strong&gt; : 웹페이지 하단에 Powered by 000의 이름과 링크를 바꿔줄수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../../assets/img/study/githubpages/3-8.JPG&quot; alt=&quot;그림8&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;sidebar.html&lt;/strong&gt; : &lt;strong&gt;중요&lt;/strong&gt; 사이드바를 커스텀할때 여기를 건든다.&lt;/p&gt;

&lt;p&gt;먼저 사이드바에 자신의 사진을 넣어보자&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../../assets/img/study/githubpages/3-22.JPG&quot; alt=&quot;그림22&quot; /&gt;&lt;/p&gt;

&lt;p&gt;를 원하는 위치에 넣어준다. 사이드바 가장위에도 넣을수 있고 가장 아래도 넣을 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../../assets/img/study/githubpages/3-9.jpeg&quot; alt=&quot;그림9&quot; width=&quot;200&quot; /&gt;&lt;/p&gt;

&lt;p&gt;빠르게 만들어보기 위해 나머지는 건들지 않고 바로 _posts로 넘어간다.&lt;/p&gt;

&lt;h2 id=&quot;4-_posts&quot;&gt;4. _posts&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;../../../../assets/img/study/githubpages/3-10.jpeg&quot; alt=&quot;그림10&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이미 글이 있다.&lt;/p&gt;

&lt;p&gt;위와 같은 양식으로 게시물을 올릴때 연-월-일-카테고리이름-내용제목.md로 하자&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../../assets/img/study/githubpages/3-11.JPG&quot; alt=&quot;그림11&quot; /&gt;&lt;/p&gt;

&lt;p&gt;일단 대충 이름과 양식만 맞추고 내용은 나중에 고쳐보자.&lt;/p&gt;

&lt;h2 id=&quot;5-assets&quot;&gt;5. assets&lt;/h2&gt;

&lt;p&gt;블로그 스타일설정과
포스팅할 이미지등이 여기에 보관한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../../assets/img/study/githubpages/3-12.jpeg&quot; alt=&quot;그림12&quot; /&gt;&lt;/p&gt;

&lt;p&gt;먼저 icons에 favicon.ico가 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../../assets/img/study/githubpages/3-13.jpeg&quot; alt=&quot;그림13&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위 그림과 같이 웹 아이콘이 favicon인데 이 아이콘을 정할수 있다.&lt;/p&gt;

&lt;p&gt;아이콘으로 만들 이미지를 준비한다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.favicon-generator.org/&quot;&gt;https://www.favicon-generator.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;위 사이트에 접속한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../../assets/img/study/githubpages/3-14.jpeg&quot; alt=&quot;그림14&quot; /&gt;&lt;/p&gt;

&lt;p&gt;파일을 선택하고 create Favicon 버튼을 클릭한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../../assets/img/study/githubpages/3-15.jpeg&quot; alt=&quot;그림15&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Download the generated favicon을 클릭하면 zip파일이 다운받아진다.&lt;/p&gt;

&lt;p&gt;zip파일을 풀면 favicon.ico파일을 복사하여 기존에 assets/icons/favicon.ico를 지우고 새 favicon.ico를 넣는다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../../assets/img/study/githubpages/3-16.jpeg&quot; alt=&quot;그림16&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위 사진처럼 변환된 favicon.ico를 폴더에 넣어준다.&lt;/p&gt;

&lt;p&gt;나머지 변환된 png들도 이름을 맞춰주어 바꿔준다.&lt;/p&gt;

&lt;p&gt;assets/img에 sidebar-bg.jpg를 자신의 이미지로 바꿔준다.&lt;/p&gt;

&lt;p&gt;괜찮은 무료 이미지를 찾는다면 아래 링크에서 검색하면 좋다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://unsplash.com/&quot;&gt;https://unsplash.com/&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;6-_configyml&quot;&gt;6. _config.yml&lt;/h2&gt;

&lt;p&gt;페이지 구성정보이자 가장 중요한 환경변수 설정 파일이다.&lt;/p&gt;

&lt;p&gt;가장 먼저 보이는 url:은&lt;/p&gt;

&lt;p&gt;url: https://&lt;username&gt;.github.io 를 하준다.&lt;/username&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../../assets/img/study/githubpages/3-17.jpeg&quot; alt=&quot;그림17&quot; /&gt;&lt;/p&gt;

&lt;p&gt;​title : 은 내 블로그 이름을 적어주고&lt;/p&gt;

&lt;p&gt;description은 블로그에 대한 간단한 소개글&lt;/p&gt;

&lt;p&gt;tageline도 블로그에 대한 간단한 소개글이다.&lt;/p&gt;

&lt;p&gt;사이드바에 보인다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../../assets/img/study/githubpages/3-18.JPG&quot; alt=&quot;그림18&quot; /&gt;&lt;/p&gt;

&lt;p&gt;logo는 그대로 두면 되겠다.&lt;/p&gt;

&lt;p&gt;다음 author을 _data의 authors.yml에서 바꾸어주었던 닉네임으로 바꿔준다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../../assets/img/study/githubpages/3-19.jpeg&quot; alt=&quot;그림19&quot; /&gt;&lt;/p&gt;

&lt;p&gt;paginate는 보여줄수 있는 게시물 개수이다. 기본값이 5로 5개씩 보여준다.&lt;/p&gt;

&lt;p&gt;그대로 둔다.&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;accent_image는 사이드바의 이미지이다.&lt;/p&gt;

&lt;p&gt;assets/img/에 sidebar-bg.jpg의 이름으로 이미지를 바꿔준다.&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;google_fonts:&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;font:&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;font_heading:&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;google_analytics:&lt;/p&gt;

&lt;h2 id=&quot;7-aboutmd&quot;&gt;7. about.md&lt;/h2&gt;
&lt;p&gt;내 about으로 나를 설명하는 부분이다.&lt;/p&gt;

&lt;p&gt;간단하게 나를 표현하자.&lt;/p&gt;

&lt;p&gt;순서는 가장 먼저로 한다.&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;나머지 파일들도 대충 눌러보면서 확인해보면서 눈으로 익혀본다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;+about.md와 같이 _posts폴더안이 아니라 밖에 만들수도 있다.
필자는 Portfolio 카테고리를 하나 만들었다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;../../../../assets/img/study/githubpages/3-20.JPG&quot; alt=&quot;그림20&quot; /&gt;&lt;/p&gt;

&lt;p&gt;일단 컴파일을 해서 확인을 해보자.&lt;/p&gt;

&lt;p&gt;bundle exec jekyll serve&lt;/p&gt;

&lt;p&gt;명령어를 터미널에서 하고 로컬주소로 접속을 한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../../assets/img/study/githubpages/3-21.jpeg&quot; alt=&quot;그림21&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 26 Dec 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/2020/12/26/making-blog03.html</link>
        <guid isPermaLink="true">http://localhost:4000/study/2020/12/26/making-blog03.html</guid>
        
        <category>githubpage</category>
        
        
        <category>study</category>
        
      </item>
    
      <item>
        <title>[GithubPages] 02.하루만에 깃허브 블로그 만들기</title>
        <description>&lt;h1 id=&quot;시작하기&quot;&gt;시작하기&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;목차
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#0.시작하기전에&quot;&gt;0.시작하기전에&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#1.시작하기&quot;&gt;1.시작하기&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;0-시작하기전에&quot;&gt;0. 시작하기전에&lt;/h2&gt;
&lt;p&gt;이제 깃허브 블로그를 만들어보자 먼저 만들기 전에 준비할것을 살펴보자.&lt;/p&gt;

&lt;p&gt;아래 사진과 같이 자신의 계정이 영어로 되어있어야 한다. 그렇지 않으면 여러 오류에 시달리게 될수 있다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. 계정 이름 영어로 바꾸기&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../../assets/img/study/githubpages/2-1.png&quot; alt=&quot;그림1&quot; width=&quot;400&quot; /&gt;&lt;/p&gt;

&lt;p&gt;계정이름이 한글이라면 자기 계정을 누르고 ‘계정 설정 변경’ –&amp;gt; ‘내 Microsoft 계정 관리’로 바꾸어 준다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../../assets/img/study/githubpages/2-2.png&quot; alt=&quot;그림2&quot; width=&quot;400&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. 블로그를 만들기위한 개발환경프로그램&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;블로그를 만들기위한 편집기 또는 개발환경 프로그램은 요즘 대부분이 사용하고 있는 Visual Studio Code를 이용한다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Git 설치&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Git이 설치되어있어야 한다.&lt;/p&gt;

&lt;p&gt;위 개발환경 세팅하는 법을 모른다면 아래 링크로 접속하여 준비해보자.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://khw11044.github.io/etc/2020/12/21/setting-start.html&quot;&gt;개발환경세팅&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;1-시작하기&quot;&gt;1. 시작하기&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;먼저 Gitbut 블로그의 기본 구조를 파악해보자.&lt;/p&gt;

&lt;p&gt;우리는 보통 블로그라고 부르지만, 실제로 사용하는 서비스 이름은 ‘Github pages’이다. 페이지를 만들고 관리하는 기본적인 방법은, 아래 두 페이지에 잘 정리되어 있다. 한번쯤 꼭 접속해서 1분이라도 둘러보면 좋다&lt;/p&gt;

&lt;p&gt;🔗 &lt;a href=&quot;https://pages.github.com/&quot;&gt;https://pages.github.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🔗 &lt;a href=&quot;https://docs.github.com/en/github/working-with-github-pages/getting-started-with-github-pages&quot;&gt;https://docs.github.com/en/github/working-with-github-pages/getting-started-with-github-pages&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;깃허브 페이지는 Github내에 저장소를 만드는 것으로 시작할 수 있으며, 페이지 관련 설정은 저장소 세팅에서 일부 수정할 수 있다.&lt;/p&gt;

&lt;p&gt;깃허브 페이지를 작성하고 운영하는 데에 깃허브가 추천하는 도구는 ‘jekyll’(지킬)이다. 지킬은 ruby언어로 작성된 정적 사이트 생성기로, 기본 사용법을 다음 페이지에서 확인할 수 있다.&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;🔗 &lt;a href=&quot;http://jekyllrb-ko.github.io/&quot;&gt;http://jekyllrb-ko.github.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;어떤 언어든, 어떤 도구든, 설명서를 다 읽고 시작하지는 않는다, 일단 한 번 부딪혀 보는게 가장 빠른 법. 학부생때 교수님이 항상하시던 말 ‘백문이 불여일타’ 백번 보는 것이 한번 치는것보다 못하다. 일단 코드를 쳐보고 시작해보자.&lt;/p&gt;

&lt;p&gt;기본 종보가 어디에 있는지 확인했으니 한 단계식 만들면서 진행해보자.&lt;/p&gt;

&lt;h3 id=&quot;11-테마-찾기&quot;&gt;1.1 테마 찾기&lt;/h3&gt;

&lt;p&gt;깃허브 페이지에는 다양한 테마를 적용할 수 있다. 깃허브 블로그 테마는 jekyll로 만들어져 있고 이미 만들어진 수 많은 테마를 검색-다운로드 후 자신의 페이지에 적용할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Jekyll&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../../assets/img/study/githubpages/2-2.png&quot; alt=&quot;그림2&quot; width=&quot;400&quot; /&gt;&lt;/p&gt;

&lt;p&gt;지킬은 간단히 설명하자면 블로그 생성기이다.&lt;/p&gt;

&lt;p&gt;우리가 맨땅에 처음부터 CSS, JS, HTML로 파일들을 구성하고 블로그를 만들기에는 시간도 부족하고 내용을 다 알기도 어렵고 일일이 찾기도 귀찮다. 즉 너무 힘든일이다.&lt;/p&gt;

&lt;p&gt;따라서 어느정도의 형태가 갖추어져있는 블로그 템플릿을 제공하여 약간의 커스텀만하고 포스팅하는데 집중할수 있게 해주는 것이 Jekyll 이다.&lt;/p&gt;

&lt;p&gt;Jekyll 테마를 통해 블로그 테마를 다운받고 이미지와 색, 네이게이션 바등을 수정하고 게시물을 업로드하고 Jekyll을 통해서 컴파일을 하여 내가 운영할수 있는 블로그 코드 파일,HTML, CSS, JS 파일을 내뱉는다. 이런 파일들을 자신의 레파지토리에 넣으면 블로그가 만들어진다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Static website를 만들어주는 도구&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Markdown -&amp;gt; HTML 지원&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;수 많은 무료테마 존재&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;GitHub Pages가 추천하는 도구&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;../../../../assets/img/study/githubpages/2-3.png&quot; alt=&quot;그림3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;지킬 무료, 유료 테마들을 다운 받을수 있는 사이트&lt;/p&gt;

&lt;p&gt;🔗 &lt;a href=&quot;http://jekyllthemes.org/&quot;&gt;http://jekyllthemes.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🔗 &lt;a href=&quot;https://jekyllthemes.io/free&quot;&gt;https://jekyllthemes.io/free&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🔗 &lt;a href=&quot;https://jamstackthemes.dev/ssg/jekyll/&quot;&gt;https://jamstackthemes.dev/ssg/jekyll/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🔗 &lt;a href=&quot;https://jekyll-themes.com/free/&quot;&gt;https://jekyll-themes.com/free/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;직접 테마를 만들수도 있다. 테마 작성 관련 튜토리얼은 다음 페이지를 참조하자.&lt;/p&gt;

&lt;p&gt;🔗 &lt;a href=&quot;http://jekyllrb-ko.github.io/docs/step-by-step/01-setup/&quot;&gt;http://jekyllrb-ko.github.io/docs/step-by-step/01-setup/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;마음에 드는 테마를 찾았다면, 해당 테마 페이지에 있는 다운로드 링크 또는 github clone을 하여 파일들을 다운 받자&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;추천 테마&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://themes.jekyllrc.org/hydejack/&quot;&gt;http://themes.jekyllrc.org/hydejack/&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://jekyllthemes.io/theme/hyde&quot;&gt;https://jekyllthemes.io/theme/hyde&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://jekyllthemes.org/themes/monos/&quot;&gt;http://jekyllthemes.org/themes/monos/&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://jekyllthemes.org/themes/panthera-jekyll/&quot;&gt;http://jekyllthemes.org/themes/panthera-jekyll/&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://jekyllthemes.org/themes/jekyll-theme-prologue/&quot;&gt;http://jekyllthemes.org/themes/jekyll-theme-prologue/&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;개발자 블로그라면 테마는 무조건 사이드 카테고리바가 있어줘야 한다.&lt;/p&gt;

&lt;p&gt;프로젝트별, 언어별, 목록도 많고 무엇보다 내가 공부할려고, 내가 나중에 빠르게 다시 보기위해 정리하는 것이기 때문에 카테고리별로 포스팅할수 있는 블로그가 가장 좋다.&lt;/p&gt;

&lt;p&gt;또한 개발자에게 포트폴리오도 중요하기 떄문에 블로그 카테고리 가장 상단에 자신을 소개할수 있는 About과 Portfolio나 resume를 보여줄수 있는 카테고리가 있으면 좋다.&lt;/p&gt;

&lt;p&gt;개인적으로 사이드 바에 자신의 사진도 올릴수 있으면 좋다고 생각한다.&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;본 강의는 추천 번호 1번 hydejack Theme를 다운받아서 사용할것이다.&lt;/p&gt;

&lt;p&gt;하지만 대부분 테마들이 비슷한 규칙을 가지고 있으니 본 블로그를 통해 익히고 다른 테마들로 자신의 블로그를 만들어보자.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../../assets/img/study/githubpages/2-4.jpeg&quot; alt=&quot;그림4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;다운로드 버튼을 누른다.&lt;/p&gt;

&lt;p&gt;C드라이브에 blog폴더를 만들고 압축을 풀어준다.
&lt;img src=&quot;../../../../assets/img/study/githubpages/2-5.jpeg&quot; alt=&quot;그림5&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;12-ruby와-jekyll-설치하기&quot;&gt;1.2 Ruby와 jekyll 설치하기&lt;/h3&gt;

&lt;p&gt;다운받은 파일을 수정하기 전에 Jekyll을 설치해야한다. 우리가 다운 받은 파일은 Jekyll기반으로 개발이 되어있기 때문에 Jekyll을 설치하지 않을 경우 우리가 원하는 방식으로 테마를 수정할 수가 없다. 이전글에서 설명했던 것을 복습하자면 Jekyll은 정적 컴파일러이다. Text로 우리가 작성한 Markdown, _config.yml등의 파일들은 Jekyll을 통해서 _site폴더내의 산출물로 변환되고 해당 산출물이 Github를 통해 WEB에서 실행되는 형태라고 할 수 있다.&lt;/p&gt;

&lt;p&gt;jekyll 테마를 설치하고 수정, 관리하기 위해서는, 먼저 ruby 개발 환경을 세팅하고 주어야 한다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ruby 설치&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ruby를 설치하는 이유는 Jekyll이 Ruby로 만들어져서 그렇다. 본 강좌는 Ruby를 알필요가 없다. 필자도 Ruby를 쓴 경험이 전무하지만 설치과정이 매우 간단하여 어려움 없이 설치를 완료하였다.&lt;/p&gt;

&lt;p&gt;Ruby는 오로지 이 Github 블로그 만들기를 위한 설치라고 할수 있겠다.&lt;/p&gt;

&lt;p&gt;윈도우 OS의 경우 Ruby와 개발툴킷을 별도로 설치해줘야 하므로 Ruby Install 페이지에 접속하여 아래와 같이 =&amp;gt;로 표시된 추천 다운로드 버전을 다운 받으면 된다.&lt;/p&gt;

&lt;p&gt;다음 페이지에서 루비를 다운받고 설치하도록 하자.&lt;/p&gt;

&lt;p&gt;🔗 &lt;a href=&quot;https://rubyinstaller.org/downloads/&quot;&gt;https://rubyinstaller.org/downloads/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../../assets/img/study/githubpages/2-6.png&quot; alt=&quot;그림6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위 그림에서 =&amp;gt; 표시가 되어 있는 버전의 Installer를 다운 후 설치를 진행한다. 별도 설정없이 Next만 누르면 잘 설치된다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../../assets/img/study/githubpages/2-7.jpeg&quot; alt=&quot;그림7&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이때 체크박스는 모두 체크해준다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../../assets/img/study/githubpages/2-8.png&quot; alt=&quot;그림8&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이때 1을 누르고 엔터한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../../assets/img/study/githubpages/2-9.png&quot; alt=&quot;그림9&quot; /&gt;&lt;/p&gt;

&lt;p&gt;쭉 설치가 되고 마지막에 엔터를 누르면 터미널이 꺼진다.&lt;/p&gt;

&lt;p&gt;Cmd를 열고 ruby –v 명령어를 입력하여​ 루비가 잘 설치되었는지 확인해 본다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../../assets/img/study/githubpages/2-10.png&quot; alt=&quot;그림10&quot; /&gt;&lt;/p&gt;

&lt;p&gt;테마가 들어있는 폴더에 우클릭으로 visual studio code를 연다.&lt;/p&gt;

&lt;p&gt;비주얼 코드에서 컨트롤 + ~ 로 터미널을 연다.
&lt;img src=&quot;../../../../assets/img/study/githubpages/2-11.jpeg&quot; alt=&quot;그림11&quot; /&gt;&lt;/p&gt;

&lt;p&gt;chcp 65001를 실행한다. 인코딩을 부여하기 위한 명령어인데 실행하지 않을 경우 이후 진행하게 될 온갖 명령어에서 오류가 발생하므로 꼭 진행하여야 한다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;C:\blog&amp;gt; chcp 65001&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;이제 Ruby에서 지원하는 gem 명령어를 통해 Jekyll은 물론 종속된 필요한 라이브러리를 설치하자. 아래 코드와 그림을 참고하면 된다. 참고로, gem이란 루비에서 제공하는 라이브러리를 편리하게 설치할 수 있도록 지원되는 도구이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;C:\blog&amp;gt; gem install bundler jekyll minima jekyll-feed tzinfo-data rdiscount&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;잠시 뒤 완료되면&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;C:\blog&amp;gt; bundle update –bundler&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;C:\blog&amp;gt; bundle install&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;C:\blog&amp;gt; bundle exec jekyll serve&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;아래와 같은 문구가 나온다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../../assets/img/study/githubpages/2-12.jpeg&quot; alt=&quot;그림12&quot; /&gt;​&lt;/p&gt;

&lt;p&gt;컨트롤+C를 두번하여 종료하고&lt;/p&gt;

&lt;p&gt;gem ‘wdm’, ‘&amp;gt;= 0.1.0’&lt;/p&gt;

&lt;p&gt;을 좌측 사이드바 Gemfile의 가장 아래에 붙여넣고 저장을 해준후&lt;/p&gt;

&lt;p&gt;다시 &amp;gt;bundle exec jekyll serve&lt;/p&gt;

&lt;p&gt;위에 문구가 사라진다.&lt;/p&gt;

&lt;p&gt;http://127.0.0.1:4000/ 브라우저에서 실행시켜 본다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../../assets/img/study/githubpages/2-13.jpeg&quot; alt=&quot;그림13&quot; /&gt;​&lt;/p&gt;

&lt;p&gt;다음 포스팅은 블로그 커스텀을 해본다.&lt;/p&gt;
</description>
        <pubDate>Sat, 26 Dec 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/2020/12/26/making-blog02.html</link>
        <guid isPermaLink="true">http://localhost:4000/study/2020/12/26/making-blog02.html</guid>
        
        <category>githubpage</category>
        
        
        <category>study</category>
        
      </item>
    
  </channel>
</rss>
